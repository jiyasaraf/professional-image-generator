import React from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Download, Plus, Sparkles } from 'lucide-react';

interface ResultsDisplayProps {
  originalImage: string;
  processedImage: string;
  onDownload: () => void;
  onProcessAnother: () => void;
}

export const ResultsDisplay: React.FC<ResultsDisplayProps> = ({
  originalImage,
  processedImage,
  onDownload,
  onProcessAnother
}) => {
  return (
    <div className="fade-in" data-testid="results-section">
      <Card className="shadow-sm">
        <CardContent className="p-6">
          <h2 className="text-xl font-semibold text-foreground mb-6 text-center">
            Your Professional Portrait
          </h2>

          <div className="grid md:grid-cols-2 gap-6">
            {/* Original Image */}
            <div className="space-y-3">
              <h3 className="text-lg font-medium text-foreground text-center">Original</h3>
              <div className="relative">
                <img 
                  src={originalImage} 
                  alt="Original headshot" 
                  className="w-full h-auto rounded-lg shadow-md border border-border"
                  data-testid="img-original-result"
                />
                <div className="absolute top-2 left-2">
                  <span className="px-2 py-1 bg-secondary text-secondary-foreground text-xs rounded-full font-medium">
                    Before
                  </span>
                </div>
              </div>
            </div>

            {/* Processed Image */}
            <div className="space-y-3">
              <h3 className="text-lg font-medium text-foreground text-center">Professional</h3>
              <div className="relative">
                {processedImage ? (
                  <img 
                    src={processedImage} 
                    alt="Professional portrait" 
                    className="w-full h-auto rounded-lg shadow-md border border-border"
                    data-testid="img-processed-result"
                  />
                ) : (
                  <div className="w-full aspect-[3/4] bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg shadow-md border border-border flex items-center justify-center">
                    <div className="text-center p-4">
                      <Sparkles className="text-4xl text-primary mb-3 mx-auto" size={48} />
                      <p className="text-sm text-muted-foreground">Professional portrait will appear here</p>
                      <p className="text-xs text-muted-foreground mt-1">Generated by Gemini 2.5 Flash Image</p>
                    </div>
                  </div>
                )}
                <div className="absolute top-2 left-2">
                  <span className="px-2 py-1 bg-accent text-accent-foreground text-xs rounded-full font-medium">
                    After
                  </span>
                </div>
              </div>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex flex-wrap justify-center gap-4 mt-8">
            <Button
              onClick={onDownload}
              variant="default"
              className="bg-accent text-accent-foreground hover:bg-accent/90"
              data-testid="button-download-result"
            >
              <Download size={16} className="mr-2" />
              Download Result
            </Button>
            <Button
              onClick={onProcessAnother}
              variant="secondary"
              data-testid="button-process-another"
            >
              <Plus size={16} className="mr-2" />
              Process Another
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
